global:
  imagePullPolicy: IfNotPresent
  # vault:
  #   host: ip
  #   name: vault
  #   vaultToken: someToken

frontend:
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  service:
    port: 80
  ingress:
    host: nbaranovskii.2sem.students-projects.ru # Корректный домен будет указан в задании
    path: /
    pathType: Prefix
  containerPort: 80
  image: nikitazerobit/sausage-frontend:latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "200m"
  nginxConf: nginx.conf

backend:
  annotations:
    path: /actuator/prometheus
    port: "8080"
    scrape: "true"
  env:
    postgresUri: jdbc:postgresql://postgresql:5432/sausage-store
    postgresUser: store
    postgresPassword: storepassword
    reportPath: /logs/reports
    logPath: /logs
  service:
    port: 8080
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  image: nikitazerobit/sausage-backend:latest
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "1"
  containerPort: 8080
  livenessProbe:
    httpGet:
        path: /actuator/health
        port: 8080
    initialDelaySeconds: 30
    periodSeconds: 15
    timeoutSeconds: 5
    failureThreshold: 3
  vpa:
    updatePolicy:
        updateMode: "Off"
    resourcePolicy:
      containerPolicies:
        - containerName: backend
          minAllowed:
            cpu: 100m
            memory: 180Mi
          maxAllowed:
            cpu: 1
            memory: 512Mi
          controlledResources: ["cpu", "memory"]

backend-report:
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  service:
    port: 8080
  config:
    port: 8080
  image: golang:alpine
  resources:
    requests:
      memory: "128Mi"
      cpu: 150m
    limits:
      memory: "256Mi"
      cpu: 300m
  containerPort: 8080
  secret:
    dbport: 27017
    dbhost: mongodb
    dbname: sausage-store
    dbuser: mongouser
    dbpassword: mongospassword
  hpa:
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70

infra:
  postgresql:
    enabled: true
    replicas: 1
    image: postgres:17.5
    containerPort: 5432
    env:
      POSTGRES_DB: sausage-store
      POSTGRES_USER: store
      POSTGRES_PASSWORD: storepassword
    resources:
      requests:
        memory: "256Mi"
        cpu: "300m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    persistence:
      enabled: true
      storageClass: ""
      size: 2Gi

  mongodb:
    image: mongo:8.0.9
    enabled: true
    replicas: 1
    env:
      MONGO_INITDB_DATABASE: sausage-store
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_USERNAME: mongouser
      MONGO_INITDB_PASSWORD: mongospassword
    containerPort: 27017